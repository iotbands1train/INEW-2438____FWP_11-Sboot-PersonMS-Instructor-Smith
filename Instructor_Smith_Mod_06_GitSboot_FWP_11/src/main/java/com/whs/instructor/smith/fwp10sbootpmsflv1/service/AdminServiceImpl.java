package com.whs.instructor.smith.fwp10sbootpmsflv1.service;

import java.util.Iterator;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired; 
import org.springframework.stereotype.Service;

import com.whs.instructor.smith.fwp10sbootpmsflv1.model.Admin;
import com.whs.instructor.smith.fwp10sbootpmsflv1.repository.AdminRepository; 
 
 
@Service // This means that this class is a service
public class AdminServiceImpl implements AdminService {
	@Autowired
	// This means to get the bean which is auto-generated by Spring
	// We will use it to handle the data
	AdminRepository adminRepository;

	// get all admins
	public List<Admin> getAllAdmins() {
		// find all admins data, then return it
		return adminRepository.findAll();
	}

	// save an admin
	public void saveAdmin(Admin per) {
		// save admin data to database
		adminRepository.save(per);
	}

	// get admin by id
	public Admin getAdminById(Long id) {
		// find an admin by id
		Admin per = (Admin) adminRepository.getById(id);
		// if there is not an admin who has the id, throw the error.
		if (per == null) {
			throw new RuntimeException("Admin not found");
		}
		return per;
	}

	// delete admin by id
	public void deleteAdminById(Long id) {
		// find an admin by id
		Admin per = (Admin) adminRepository.getById(id);
		// if there is not an admin who has the id, throw the error.
		if (per == null) {
			throw new RuntimeException("Admin not found");
		}
		// delete an admin who has the id from the database
		adminRepository.deleteById(id);
		
	}
	public boolean verifyAdmin(String user, String pass) {
		List<Admin> list = getAllAdmins();
		user=user.trim();
		user=user.strip();
		pass=pass.trim();
		pass=pass.strip();
		Admin p = null;
		for (Iterator<Admin> iterator = list.iterator(); iterator.hasNext();) {
			Admin admin = (Admin) iterator.next();
			String u = admin.getUser();
			String ps = admin.getPass();
			if (u.equalsIgnoreCase(user) && ps.equalsIgnoreCase(pass))
				p = admin;
		}
		return p==null?false:true;
	}
	public Admin lastAdmin() {
		Admin a = null;
		List<Admin> list = getAllAdmins();
		int lastIndex = (list.size() - 1);
		a = list.get(lastIndex);
		return a;
	}

}
